<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                       http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                       http://www.springframework.org/schema/context
                       http://www.springframework.org/schema/context/spring-context-3.1.xsd
                       http://www.springframework.org/schema/tx
                       http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

    <context:property-placeholder file-encoding="UTF-8" location="file:/data/www/config/mysql.properties"/>

    <bean id="blogDataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init"
          destroy-method="close">
        <property name="uniqueResourceName" value="blog"/>
        <property name="xaDataSourceClassName" value="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource"/>
        <property name="xaProperties">
            <props>
                <prop key="url">${mysql.blog.jdbc.url}</prop>
                <prop key="user">${mysql.blog.jdbc.username}</prop>
                <prop key="password">${mysql.blog.jdbc.password}</prop>
            </props>
        </property>
        <property name="minPoolSize" value="10"/>
        <property name="maxPoolSize" value="100"/>
        <property name="borrowConnectionTimeout" value="30"/>
        <property name="testQuery" value="select 1"/>
        <property name="maintenanceInterval" value="60"/>
    </bean>

    <bean id="blogSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="blogDataSource"/>
        <property name="configLocation" value="classpath:config/mybatis-config.xml"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.sqb.blog.dal.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="blogSqlSessionFactory"/>
    </bean>


    <!--<bean id="atomikosLocalLogAdministrator" class="com.atomikos.icatch.admin.imp.LocalLogAdministrator"/>

    <bean id="atomikosUserTransactionService" class="com.atomikos.icatch.config.UserTransactionServiceImp"
          init-method="init" destroy-method="shutdownForce">
        <constructor-arg>
            &lt;!&ndash; IMPORTANT: specify all Atomikos properties here &ndash;&gt;
            <props>
                <prop key="com.atomikos.icatch.service">
                    com.atomikos.icatch.standalone.UserTransactionServiceFactory
                </prop>
            </props>
        </constructor-arg>
        <property name="initialLogAdministrators">
            <list>
                <ref bean="atomikosLocalLogAdministrator"/>
            </list>
        </property>
    </bean>

    <bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init"
          destroy-method="close" depends-on="atomikosUserTransactionService">
        <property name="startupTransactionService" value="false"/>
        <property name="forceShutdown" value="false"/>
    </bean>

    <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp"
          depends-on="atomikosUserTransactionService">
        <property name="transactionTimeout" value="300"/>
    </bean>


    <bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
        <property name="transactionManager" ref="atomikosTransactionManager"/>
        <property name="userTransaction" ref="atomikosUserTransaction"/>
    </bean>-->

    <!--<tx:annotation-driven transaction-manager="transactionManager"/>-->
    <tx:annotation-driven />

    <context:component-scan base-package="com.sqb.blog.dal"/>
</beans>
